# nginx 1.22.x

load_module modules/ngx_http_brotli_static_module.so;

error_log syslog:server=unix:/dev/log,nohostname;
# work around nginx still logging to stderr when using syslog error_log
error_log /dev/null;

worker_processes auto;
worker_rlimit_nofile 16384;

events {
    worker_connections 4096;
}

http {
    include mime.types;
    default_type application/octet-stream;

    charset utf-8;
    charset_types text/css text/javascript text/plain text/xml application/atom+xml;

    sendfile on;
    sendfile_max_chunk 256k;
    tcp_nopush on;
    keepalive_requests 256;
    keepalive_timeout 3m;
    server_tokens off;
    msie_padding off;

    client_max_body_size 1k;
    client_body_buffer_size 1k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 1k;
    http2_chunk_size 4k;

    client_body_timeout 15s;
    client_header_timeout 15s;
    send_timeout 30s;

    max_ranges 1;

    resolver [::1];
    resolver_timeout 15s;

    http2_max_concurrent_streams 16;
    limit_conn_status 429;
    limit_conn_zone $binary_remote_addr zone=http-limit:10m;
    limit_conn http-limit 128;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers on;
    ssl_conf_command Options PrioritizeChaCha;

    ssl_certificate /etc/letsencrypt/live/daniel.micay.dev/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/daniel.micay.dev/privkey.pem;

    # maintained by nginx-rotate-session-ticket-keys in ramfs
    ssl_session_ticket_key session-ticket-keys/4.key;
    ssl_session_ticket_key session-ticket-keys/3.key;
    ssl_session_ticket_key session-ticket-keys/2.key;
    ssl_session_ticket_key session-ticket-keys/1.key;
    ssl_session_timeout 1d;
    ssl_buffer_size 4k;

    ssl_trusted_certificate /etc/letsencrypt/live/daniel.micay.dev/chain.pem;
    ssl_stapling on;
    ssl_stapling_verify on;
    # maintained by certbot-ocsp-fetcher
    ssl_stapling_file ocsp-cache/daniel.micay.dev.der;

    log_format main '$connection $remote_addr $remote_user $ssl_protocol $server_protocol '
                    '$host $request_method "$request_uri" $status $request_length $body_bytes_sent/$bytes_sent '
                    '$request_time "$http_referer" "$http_user_agent"';
    access_log syslog:server=unix:/dev/log,nohostname main;
    log_not_found off;

    gzip_proxied any;
    gzip_vary on;

    if_modified_since before;

    aio threads;
    aio_write on;

    map $http_cookie $clear_legacy_push_cookie {
        ~__Host-push= "__Host-push=; HttpOnly; Secure; SameSite=Lax; Path=/; Max-Age=0";
    }

    server {
        listen 80 default_server backlog=4096;
        listen [::]:80 default_server backlog=4096;

        keepalive_timeout 0;

        # https://trac.nginx.org/nginx/ticket/2012
        location / {
            return 404;
        }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name danielmicay.ca www.danielmicay.ca danielmicay.com www.danielmicay.com danielmicay.dev www.danielmicay.dev micay.ca daniel.micay.ca www.micay.ca micay.dev daniel.micay.dev www.micay.dev;

        root /var/empty;

        keepalive_timeout 0;

        location /.well-known/acme-challenge/ {
            root /srv/certbot;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 default_server ssl backlog=4096;
        listen [::]:443 default_server ssl backlog=4096;
        ssl_reject_handshake on;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name danielmicay.ca www.danielmicay.ca danielmicay.com www.danielmicay.com danielmicay.dev www.danielmicay.dev micay.ca daniel.micay.ca www.micay.ca micay.dev www.micay.dev;

        root /var/empty;

        include snippets/security-headers.conf;
        add_header Cross-Origin-Resource-Policy "same-origin" always;

        return 301 https://daniel.micay.dev$request_uri;
    }

    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name daniel.micay.dev;

        root /srv/daniel.micay.dev;
        error_page 403 =404 /404;
        error_page 404 /404;

        open_file_cache max=2048 inactive=1d;
        open_file_cache_valid 1d;

        include snippets/security-headers.conf;
        add_header Cross-Origin-Resource-Policy "same-origin" always;
        gzip_static on;
        brotli_static on;

        if ($request_uri ~ ^[^?]+//) {
            rewrite ^(.*)$ $1 permanent;
        }

        location = /security.txt {
            return 301 /.well-known/security.txt;
        }

        location = /404 {
            internal;
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            include snippets/preload.conf;
            try_files $uri.html =404;
        }

        location ^~ /fonts/ {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=31536000, immutable";
            gzip_static off;
            brotli_static off;
        }

        location ~ "/$" {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, no-cache";
            include snippets/preload.conf;
            try_files ${uri}index.html @noslash;
        }

        # redirect /path/ to /path if /path.html exists
        location @noslash {
            rewrite ^(.*)/$ $1;
            if (-f $request_filename.html) {
                rewrite ^(.*) $1 permanent;
            }
            return 404;
        }

        location ~ "\.css$" {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=31536000";
        }

        location ~ "\.(?:json|txt|xml)$" {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, max-age=1800";
        }

        location ~ "/index|\.(?:br|gz|html)$" {
            internal;
        }

        location / {
            include snippets/security-headers.conf;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cache-Control "public, no-cache";
            include snippets/preload.conf;
            try_files $uri.html $uri/ =404;
        }
    }

    server {
        listen unix:/run/nginx/status.sock;

        root /var/empty;

        access_log off;

        location = / {
            stub_status;
        }

        location / {
            return 404;
        }
    }
}
